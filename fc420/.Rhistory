g
g <- subset(Best_model, Subset == unique(Temp5$ID)[1])
g
for (i in 1:length(UniquTemp)) {
g <- subset(Best_model, Subset == unique(Temp5$ID)[i])
}
g
unique(Temp5$ID)
g <- subset(Best_model, Subset == unique(Temp5$ID)[7])
g
1:length(UniquTemp)
length
length(UniquTemp)
UniquTemp
unique(Temp5$ID)
for (i in 1:length(unique(Temp5$ID)) {
for (i in 1:length(unique(Temp5$ID))) {
g <- subset(Best_model, Subset == unique(Temp5$ID)[i])
}
g
g <- subset(Best_model, Subset == unique(Temp5$ID)[1])
g
View(Best_model)
g
h <- data.frame(Model = c("Grompertz", "Baranyii","CubicPoly"),
Count = 0)
h
g
AICcCount<- Best_model[,Best_model$Subset[unique(Temp5$ID)]] %>% count(BestModelAICc)
AICcCount<- Best_model[,Best_model$Subset[unique(Temp5$ID)[1,]]] %>% count(BestModelAICc)
AICcCount<- Best_model[,Best_model$Subset[unique(Temp5$ID)[,1]]] %>% count(BestModelAICc)
unique(Temp5$ID)[,1]
AICcCount<- Best_model[,Best_model$Subset[unique(Temp5$ID)][,1]] %>% count(BestModelAICc)
Best_model$Subset[unique(Temp5$ID)][,1]
AICcCount<- Best_model[,Best_model$Subset[unique(Temp5$ID)[1]],] %>% count(BestModelAICc)
Best_model[,Best_model$Subset[unique(Temp5$ID)[1]],]
AICcCount<- Best_model[Best_model$Subset[unique(Temp5$ID)[1]],] %>% count(BestModelAICc)
AICcCount
h
AICcCount[1]
AICcCount[1,]
AICcCount[,1]
AICcCount[,2]
AICcCount[,1] == "Grompertz"
h
h[1]
h[2]
h[2,1]
h[1,2]
h[1,2] + 1
h[1,2] + 1
h
h[1,2] <- h[1,2] + 1
h
if (AICcCount[,1] == "Grompertz") {
h[1,2] <- h[1,2] + 1
}
h
h <- data.frame(Model = c("Grompertz", "Baranyii","CubicPoly"),
Count = 0)
h[2,2]
Best_mode
View(Best_model)
LetsGO <- Best_model
LetsGO
View(LetsGO)
LetsGO <- data.frame(Subset = 0,
Temp = 0,
Medium = 0)
LetsGO
LetsGO['Subset'] = Best_model["Subset"]
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp = 0,
Medium = 0)
LetsGO
View(DF)
LetsGO['Temp'] = DF["Temp"]
LetsGO
DF["Temp"]
View(DF)
DF$Temp
DF$ID == Best_model$Subset
Best_model$Subset
DF["Temp"]
DF$Temp[Best_model$Subset]
DF$ID[Best_model$Subset]
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp =0)
max(DF$ID)
for (i in 1:max(DF$ID)) {
d <- DF[ which(DF$ID == i),]
LetsGO["Temp"] <- d$Temp[1]
}
LetsGO
i = 277
d <- DF[ which(DF$ID == i),]
source("~/.active-rstudio-document", echo=TRUE)
d <- DF[ which(DF$ID == i),]
d
DF
1=246
i=246
d <- DF[ which(DF$ID == i),]
d
LetsGO["Temp"] <- d$Temp[1]
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp =0)
for (i in 1:max(DF$ID)) {
d <- DF[ which(DF$ID == i),]
LetsGO[i,"Temp"] <- d$Temp[1]
}
LetsGO
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp = 0
Best_model = Best_model$BestModelAIC)
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp = 0,
Best_model = Best_model$BestModelAIC)
LetsGO
for (i in 1:max(DF$ID)) {
d <- DF[ which(DF$ID == i),]
LetsGO[i,"Temp"] <- d$Temp[1]
}
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp = 0,
Bestmodel = Best_model$BestModelAIC)
for (i in 1:max(DF$ID)) {
d <- DF[ which(DF$ID == i),]
LetsGO[i,"Temp"] <- d$Temp[1]
}
TempPlot <- ggplot(data = subset(LetsGO, !isn.na(Bestmodel)))
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp = 0,
Bestmodel = Best_model$BestModelAIC)
for (i in 1:max(DF$ID)) {
d <- DF[ which(DF$ID == i),]
LetsGO[i,"Temp"] <- d$Temp[1]
}
TempPlot <- ggplot(data = subset(LetsGO, !isn.na(Bestmodel))) +
aes(x = BestModel, fill = Temp)+
geom_bar()
TempPlot <- ggplot(data = subset(LetsGO, !is.na(Bestmodel))) +
aes(x = BestModel, fill = Temp)+
geom_bar()
TempPlot
TempPlot <- ggplot(data = subset(LetsGO, !is.na(Bestmodel))) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()
TempPlot
TempPlot <- ggplot(data = subset(LetsGO, !is.na(Bestmodel))) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
?scale_fill_viridis
install.packages("viridis")
require(viridis)
TempPlot <- ggplot(data = subset(LetsGO, !is.na(Bestmodel))) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot
TempPlot <- ggplot(data = subset(LetsGO, (Bestmodel))) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot <- ggplot(data = subset(LetsGO, !is.na(Bestmodel))) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot
LetsGO
Temp
subset(LetsGO, !is.na(Bestmodel))
TempPlot <- ggplot(data = LetsGO) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp = 0,
Bestmodel = Best_model$BestModelAIC,
stringsAsFactors = F)
for (i in 1:max(DF$ID)) {
d <- DF[ which(DF$ID == i),]
LetsGO[i,"Temp"] <- d$Temp[1]
}
TempPlot <- ggplot(data = LetsGO) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot
LetsGO
LetsGO["Temp"]
TempPlot <- ggplot(data = LetsGO) +
aes(x = "Bestmodel", fill = "Temp")+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot
TempPlot <- ggplot(data = LetsGO) +
aes(x = LetsGO$Bestmodel, fill = LetsGO$Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot
View(LetsGO)
dev.o
dev.off
dev.off()
require(viridis)
LetsGO <- data.frame(Subset = 1:max(DF$ID),
Temp = 0,
Bestmodel = Best_model$BestModelAIC,
stringsAsFactors = F)
for (i in 1:max(DF$ID)) {
d <- DF[ which(DF$ID == i),]
LetsGO[i,"Temp"] <- d$Temp[1]
}
LetsGO["Temp"]
TempPlot <- ggplot(data = LetsGO) +
aes(x = Bestmodel, fill = Temp)+
geom_bar()+
scale_fill_viridis(discrete = T)+
theme_minimal()+
theme(legend.position = 'bottom')+
xlab('Model')+
ylab('Count')
TempPlot
source("~/.active-rstudio-document", echo=TRUE)
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
plot.new()
G(c(0,-15),pi/2,4,1)
source("~/.active-rstudio-document", echo=TRUE)
G(c(0,-15),pi/2,4,1)
source("~/.active-rstudio-document", echo=TRUE)
plot.new()
G(c(0,-15),pi/2,4,1)
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 20 ####
process_cluster_results()
rm(list=ls()) # good practice in this instance
setwd("CMEECourseWork/HPC/code/")
source("./fc420_HPC_2021_main.R")
#### 20 ####
process_cluster_results()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
setwd("CMEECourseWork/HPC/fc420")
setwd("~/CMEECourseWork/HPC/fc420")
source("./fc420_HPC_2021_main.R")
rm(list=ls()) # good practice in this instance
source("./fc420_HPC_2021_main.R")
#### 20 ####
process_cluster_results()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 20 ####
process_cluster_results()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 20 ####
process_cluster_results()
plot_cluster_results()
graphics.off() # clear any existing graphs and plot your graph within the R window
load("process_cluster.rda", .GlobalEnv) # load combined_results from your rda file
# plot the graphs
Result500 <- data.frame(SppCount500 = combined_results[[1]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511"))
Result500
combined_results[[1]]
round(combined_results[[1]][1])
round(max(combined_results[[1]]))
?ylim
barplot(Result500$SppCount500, name = Result500$frequ ,main = "Plot of Mean Species Abundance Count \n For Community Size 500 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("red"),
ylim =c(0, round(max(combined_results[[1]]))))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0, round(max(combined_results[[2]]))))
Result1000 <- data.frame(SppCount1000 = combined_results[[2]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511","512-1023","1024-2047"))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0, round(max(combined_results[[2]]))))
round(max(combined_results[[2]]))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0, 9))#round(max(combined_results[[2]]))))
# plot the graphs
Result500 <- data.frame(SppCount500 = combined_results[[1]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511"))
Result1000 <- data.frame(SppCount1000 = combined_results[[2]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511","512-1023","1024-2047"))
Result2500 <- data.frame(SppCount2500 = combined_results[[3]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511","512-1023","1024-2047"))
Result5000 <- data.frame(SppCount5000 = combined_results[[4]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511","512-1023","1024-2047"))
barplot(Result2500$SppCount2500, name = Result2500$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 2500 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("yellow"),
ylim =c(0, round(max(combined_results[[3]])))))
barplot(Result2500$SppCount2500, name = Result2500$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 2500 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("yellow"),
ylim =c(0, round(max(combined_results[[3]]))))
barplot(Result5000$SppCount5000, name = Result5000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 5000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("green"),
ylim =c(0, round(max(combined_results[[4]]))))
combined_results[[4]]
max(combined_results[[4]]
)
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =range(0, 9))#round(max(combined_results[[2]]))))
graphics.off()
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =range(0, 9))#round(max(combined_results[[2]]))))
par(mar = c(2, 2, 2, 2))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =range(0, 9))#round(max(combined_results[[2]]))))
par(mar = c(0, 2, 2, 2))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =range(0, 9))#round(max(combined_results[[2]]))))
par(mar = c(1, 2, 2, 2))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =range(0, 9))#round(max(combined_results[[2]]))))
par(mar = c(2, 2, 2, 2))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =range(0, 9))#round(max(combined_results[[2]]))))
par(mar = c(5.1, 4.1, 4.1, 2.1))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =range(0, 9))#round(max(combined_results[[2]]))))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(min(combined_results[[2]]),(max(combined_results[[2]]))))
min(combined_results[[2]])
max(combined_results[[2]])
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0,(max(combined_results[[2]]))))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0,(max(combined_results[[2]]))+1))
round(max(combined_results[[3]])))
round(max(combined_results[[3]]))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0,round(max(combined_results[[2]]))+1))
barplot(Result2500$SppCount2500, name = Result2500$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 2500 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("yellow"),
ylim =c(0, round(max(combined_results[[3]]))+1))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0,round(max(combined_results[[2]]))+1))
barplot(Result2500$SppCount2500, name = Result2500$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 2500 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("yellow"),
ylim =c(0, round(max(combined_results[[3]]))+1))
round(max(combined_results[[4]])
)
barplot(Result5000$SppCount5000, name = Result5000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 5000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("green"),
ylim =c(0, round(max(combined_results[[4]]))+1))
# plot the graphs
Result500 <- data.frame(SppCount500 = combined_results[[1]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511"))
Result1000 <- data.frame(SppCount1000 = combined_results[[2]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511","512-1023","1024-2047"))
Result2500 <- data.frame(SppCount2500 = combined_results[[3]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511","512-1023","1024-2047"))
Result5000 <- data.frame(SppCount5000 = combined_results[[4]],
frequ = c("1","2-3","4-7","8-15","16-31","32-63","64-127","128-255", "256-511","512-1023","1024-2047"))
par(mfrow=c(2,2))
barplot(Result500$SppCount500, name = Result500$frequ ,main = "Plot of Mean Species Abundance Count \n For Community Size 500 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("red"),
ylim =c(0, round(max(combined_results[[1]]))))
barplot(Result1000$SppCount1000, name = Result1000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 1000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("blue"),
ylim =c(0,max(combined_results[[2]])+1))
barplot(Result2500$SppCount2500, name = Result2500$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 2500 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("yellow"),
ylim =c(0, max(combined_results[[3]])+1))
barplot(Result5000$SppCount5000, name = Result5000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 5000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("green"),
ylim =c(0, max(combined_results[[4]])+1))
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 20 ####
process_cluster_results()
plot_cluster_results()
max(combined_results[[4]])
max(combined_results[[4]])+1
barplot(Result5000$SppCount5000, name = Result5000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 5000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("green"),
ylim =c(0, max(combined_results[[4]])))
max(combined_results[[4]]))
max(combined_results[[4]])
barplot(Result5000$SppCount5000, name = Result5000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 5000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("green"),
ylim =c(0, max(combined_results[[4]])))
round(max(combined_results[[4]]))
barplot(Result5000$SppCount5000, name = Result5000$frequ, main = "Plot of Mean Species Abundance Count \n For Community Size 5000 ",
xlab="Mean Number Individuals per Species Count",
ylab="Species Count", col=c("green"),
ylim =c(0, round(max(combined_results[[4]]))+1))
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
plot_cluster_results()
question_8()
#### 12 ####
question_12()
#### 16 ####
question_16()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
question_8()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
question_8()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
question_8()
#### 12 ####
question_12()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 12 ####
question_12()
#### 12 ####
question_12()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 12 ####
question_12()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 12 ####
question_12()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 12 ####
question_12()
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
#### 12 ####
question_12()
?table
species_abundance(c(1,5,3,6,5,6,1,1))
source("~/CMEECourseWork/HPC/fc420/fc420_HPC_2021_main.R", echo=TRUE)
species_abundance(c(1,5,3,6,5,6,1,1))
?tabulate
?floor
?tabulate
#### 16 ####
question_16()
draw_fern()
